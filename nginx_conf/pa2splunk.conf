# Initialize Lua stuff

lua_shared_dict prometheus_metrics 10M;
lua_package_path "/usr/local/nginx-lua-prometheus/?.lua;;";
init_worker_by_lua_block {
    prometheus = require("prometheus").init("prometheus_metrics")
    humidity = prometheus:gauge("humidity", "Relative Humidity", {"geo"})
    temp_f = prometheus:gauge("temp_f", "Temperature F", {"geo"})
    pressure = prometheus:gauge("pressure", "Atmospheric pressure", {"geo"})
    pm2_5_aqi = prometheus:gauge("pm2_5_aqi", "PM 2.5 AQI", {"geo"})
    rssi = prometheus:gauge("rssi", "rssi", {"geo"})
}

# Upstream to send to Splunk HEC
upstream splunk_hec {
    server splunk:8088;
}


# Server receives POST from purpleair and also expose /metrics for Prometheus
server {

    listen       80 default;
    server_name  _;
    root /dev/shm;

    location /metrics {
        content_by_lua_block {
            prometheus:collect()
        }
    }

    location / {
        default_type application/json;
        rewrite_by_lua_block {
            local cjson = require "cjson"
            ngx.req.read_body();
            local data = cjson.decode(ngx.req.get_body_data());
            local splunk_event = {};
            humidity:set(data["current_humidity"], {data["Geo"]})
            temp_f:set(data["current_temp_f"], {data["Geo"]})
            pressure:set(data["pressure"], {data["Geo"]})
            pm2_5_aqi:set(data["pm2.5_aqi"], {data["Geo"]})
            rssi:set(data["rssi"], {data["Geo"]})
            splunk_event["event"] = data;
            ngx.req.set_body_data(cjson.encode(splunk_event));
            ngx.req.set_uri("/services/collector/event", false);
        }
        proxy_pass https://splunk_hec/;
    }

}

